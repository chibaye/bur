{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport File from './icons/file';\nconst styles = makeStyles(theme => ({\n  row: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  input: {\n    width: 460,\n    height: 32,\n    opacity: 0,\n    outline: 0,\n    zIndex: 2,\n    position: 'absolute',\n    background: '#fff'\n  },\n  small: {\n    fontSize: 11,\n    marginLeft: 28,\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: 0\n    }\n  },\n  placeholder: {\n    color: '#b5babb',\n    height: 22,\n    overflow: 'hidden',\n    fontSize: 17,\n    marginLeft: 8,\n    textOverflow: 'ellipsis'\n  },\n  progress: {\n    marginTop: 6,\n    marginLeft: 26,\n    opacity: 0\n  }\n}));\n\nconst ellipsis = s => s.length > 13 ? `...${s.slice(-13)}` : s;\n\nconst getNames = files => files.length > 1 ? [...new Array(2)].map((n, i) => ellipsis(files[i].name)).toString() : ellipsis(files[0].name);\n\nexport default ((_ref) => {\n  let {\n    name,\n    files,\n    onChange\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"files\", \"onChange\"]);\n\n  const classes = styles();\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(File, null), __jsx(\"span\", {\n    className: classes.placeholder\n  }, files ? getNames(files) : 'Choose File(s)'), __jsx(\"input\", _extends({\n    type: \"file\",\n    name: name,\n    className: classes.input,\n    onChange: onChange\n  }, rest)), [...new Array(rest.multiple ? 2 : 1)].map((n, i) => __jsx(\"progress\", {\n    key: i,\n    id: `${name}-${i}`,\n    value: \"0\",\n    max: \"100\",\n    className: classes.progress\n  }, \"0%\"))), __jsx(\"small\", {\n    className: classes.small\n  }, \".jpg .jpeg .png .bmp .pdf, up to 3 MB\"));\n});","map":{"version":3,"sources":["/Users/me/dev/bur/src/app/components/upload.js"],"names":["React","makeStyles","File","styles","theme","row","display","flexDirection","input","width","height","opacity","outline","zIndex","position","background","small","fontSize","marginLeft","breakpoints","down","placeholder","color","overflow","textOverflow","progress","marginTop","ellipsis","s","length","slice","getNames","files","Array","map","n","i","name","toString","onChange","rest","classes","multiple"],"mappings":"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","sourcesContent":["import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport File from './icons/file'\n\nconst styles = makeStyles(theme => ({\n    row: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    input: {\n        width: 460,\n        height: 32,\n        opacity: 0,\n        outline: 0,\n        zIndex: 2,\n        position: 'absolute',\n        background: '#fff'\n    },\n    small: {\n        fontSize: 11,\n        marginLeft: 28,\n        [theme.breakpoints.down('xs')]: {\n            marginLeft: 0\n        }\n    },\n    placeholder: {\n        color: '#b5babb',\n        height: 22,\n        overflow: 'hidden',\n        fontSize: 17,\n        marginLeft: 8,\n        textOverflow: 'ellipsis'\n    },\n    progress: {\n        marginTop: 6,\n        marginLeft: 26,\n        opacity: 0\n    }\n}))\n\nconst ellipsis = s => s.length > 13 ? `...${s.slice(-13)}` : s\n\nconst getNames = files => files.length > 1 ?\n    [...new Array(2)].map((n, i) => ellipsis(files[i].name)).toString() : ellipsis(files[0].name)\n\nexport default ({name, files, onChange, ...rest}) => {\n    const classes = styles()\n\n    return <div>\n        <div className={classes.row}>\n            <File/>\n            <span className={classes.placeholder}>{files ? getNames(files) : 'Choose File(s)'}</span>\n            <input type='file' name={name} className={classes.input} onChange={onChange} {...rest}/>\n            {[...new Array(rest.multiple ? 2 : 1)].map((n, i) =>\n                <progress key={i} id={`${name}-${i}`} value='0' max='100' className={classes.progress}>0%</progress>\n            )}\n        </div>\n        <small className={classes.small}>.jpg .jpeg .png .bmp .pdf, up to 3 MB</small>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}