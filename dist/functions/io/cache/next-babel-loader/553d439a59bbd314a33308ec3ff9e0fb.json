{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { FORM } from '../types';\nimport Router from 'next/router';\nimport { firebase, firestore, storage } from '../../firebase';\n\nvar upload = function upload(name, file) {\n  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return function (dispatch) {\n    var task = storage.ref(\"bursaries/\".concat(file.name)).put(file, {\n      contentType: 'image/jpeg'\n    });\n    task.on(firebase.storage.TaskEvent.STATE_CHANGED, function (snapshot) {\n      var el = document.getElementById(\"\".concat(name, \"-\").concat(index));\n      el.style.opacity = '1';\n      el.value = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n    }, function (error) {\n      return error;\n    },\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return task.snapshot.ref.getDownloadURL();\n\n            case 3:\n              url = _context.sent;\n              dispatch({\n                type: FORM.FIELD,\n                payload: {\n                  name: name,\n                  index: index,\n                  url: url\n                }\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    })));\n  };\n};\n\nexport var inputChange = function inputChange(e) {\n  return function (dispatch) {\n    return dispatch({\n      type: FORM.INPUT,\n      payload: {\n        e: e\n      }\n    });\n  };\n};\nexport var fileChange = function fileChange(_ref2) {\n  var _ref2$target = _ref2.target,\n      name = _ref2$target.name,\n      files = _ref2$target.files;\n  return function (dispatch) {\n    dispatch({\n      type: FORM.FILES,\n      payload: {\n        name: name,\n        files: files\n      }\n    });\n    files.length > 1 ? _toConsumableArray(new Array(2)).map(function (n, i) {\n      return dispatch(upload(name, files[i], i));\n    }) : dispatch(upload(name, files[0]));\n  };\n};\nexport var post = function post(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: FORM.LOADING\n                });\n                _context2.prev = 1;\n                _context2.next = 4;\n                return firestore.collection('bursaries').add(data);\n\n              case 4:\n                _context2.next = 6;\n                return dispatch({\n                  type: FORM.LOADING\n                });\n\n              case 6:\n                Router.replace('/thank-you');\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                alert('Something went wrong, try again.');\n                console.error(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":null,"metadata":{},"sourceType":"module"}