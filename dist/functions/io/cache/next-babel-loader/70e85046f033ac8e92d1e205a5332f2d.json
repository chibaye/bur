{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport File from './icons/file';\nconst styles = makeStyles(theme => ({\n  row: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  input: {\n    width: 460,\n    height: 32,\n    opacity: 0,\n    outline: 0,\n    zIndex: 2,\n    position: 'absolute',\n    background: '#fff'\n  },\n  small: {\n    fontSize: 11,\n    marginLeft: 28,\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: 0\n    }\n  },\n  placeholder: {\n    color: '#b5babb',\n    height: 22,\n    overflow: 'hidden',\n    fontSize: 17,\n    marginLeft: 8,\n    textOverflow: 'ellipsis'\n  },\n  progress: {\n    marginTop: 6,\n    marginLeft: 26,\n    opacity: 0\n  }\n}));\n\nconst ellipsis = s => s.length > 13 ? `...${s.slice(-13)}` : s;\n\nconst getNames = files => files.length > 1 ? [...new Array(2)].map((n, i) => ellipsis(files[i].name)).toString() : ellipsis(files[0].name);\n\nexport default ((_ref) => {\n  let {\n    name,\n    files,\n    onChange\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"files\", \"onChange\"]);\n\n  const classes = styles();\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(File, null), __jsx(\"span\", {\n    className: classes.placeholder\n  }, files ? getNames(files) : 'Choose File(s)'), __jsx(\"input\", _extends({\n    type: \"file\",\n    name: name,\n    className: classes.input,\n    onChange: onChange\n  }, rest)), [...new Array(rest.multiple ? 2 : 1)].map((n, i) => __jsx(\"progress\", {\n    key: i,\n    id: `${name}-${i}`,\n    value: \"0\",\n    max: \"100\",\n    className: classes.progress\n  }, \"0%\"))), __jsx(\"small\", {\n    className: classes.small\n  }, \".jpg .jpeg .png .bmp .pdf, up to 3 MB\"));\n});","map":null,"metadata":{},"sourceType":"module"}