{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _temp;\n\nvar __jsx = React.createElement;\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\nimport SimpleReactValidator from 'simple-react-validator';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Row from './row';\nimport Icon from './icons';\nimport Terms from './terms';\nimport Upload from './upload';\nimport Fieldset from './fieldset';\nimport { fileChange, inputChange, post } from '../lib/redux/actions/form';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nvar styles = function styles(theme) {\n  return {\n    '@global': {\n      '.srv-validation-message': {\n        color: '#900'\n      }\n    },\n    actions: {\n      display: 'flex',\n      width: '100%',\n      marginTop: 30,\n      marginBottom: 30,\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    typography: {\n      marginRight: theme.spacing() + 4\n    },\n    progress: {\n      color: 'white',\n      display: 'none'\n    },\n    show: {\n      display: 'block'\n    },\n    col: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%'\n    }\n  };\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(function (state) {\n  return state;\n}, {\n  fileChange: fileChange,\n  inputChange: inputChange,\n  post: post\n})((_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_temp, _Component);\n\n  function _temp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _temp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_temp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"validator\", new SimpleReactValidator({\n      autoForceUpdate: _assertThisInitialized(_this)\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          data = _this$props.data,\n          post = _this$props.post;\n\n      if (_this.validator.allValid()) {\n        post(data);\n      } else {\n        _this.validator.showMessages();\n\n        alert('There are errors on the form.');\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(_temp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          theme = _this$props2.theme,\n          data = _this$props2.data,\n          files = _this$props2.files,\n          loading = _this$props2.form.loading,\n          fileChange = _this$props2.fileChange,\n          inputChange = _this$props2.inputChange;\n      var ids = files.ids,\n          letter = files.letter,\n          certificate = files.certificate,\n          photos = files.photos,\n          payment = files.payment;\n      var names = data.names,\n          surname = data.surname,\n          phone = data.phone,\n          gender = data.gender,\n          address = data.address,\n          email = data.email,\n          birthday = data.birthday,\n          school = data.school,\n          major = data.major,\n          guardian = data.guardian,\n          guardianPhone = data.guardianPhone,\n          nrc = data.nrc;\n      return __jsx(\"form\", {\n        onSubmit: this.handleSubmit\n      }, __jsx(Row, {\n        title: \"Personal Details\"\n      }, __jsx(Fieldset, {\n        label: \"Given Names\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(TextField, {\n        name: \"names\",\n        onChange: inputChange,\n        value: names,\n        className: classes.textField,\n        placeholder: \"Enter exactly as stated on your NRC\"\n      }), this.validator.message('name', names, 'required'))), __jsx(Fieldset, {\n        label: \"Surname\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(TextField, {\n        name: \"surname\",\n        onChange: inputChange,\n        value: surname,\n        className: classes.textField,\n        placeholder: \"Enter exactly as stated on your NRC\"\n      }), this.validator.message('surname', surname, 'required'))), __jsx(Fieldset, {\n        label: \"Gender\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(RadioGroup, {\n        \"aria-label\": \"position\",\n        name: \"gender\",\n        value: gender,\n        onChange: inputChange,\n        row: true\n      }, __jsx(FormControlLabel, {\n        value: \"male\",\n        control: __jsx(Radio, {\n          color: \"primary\",\n          disableRipple: true\n        }),\n        label: \"Male\",\n        labelPlacement: \"end\"\n      }), __jsx(FormControlLabel, {\n        value: \"female\",\n        control: __jsx(Radio, {\n          color: \"primary\",\n          disableRipple: true\n        }),\n        label: \"Female\",\n        labelPlacement: \"end\"\n      })), this.validator.message('gender', gender, 'required'))), __jsx(Fieldset, {\n        label: \"NRC\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(TextField, {\n        name: \"nrc\",\n        onChange: inputChange,\n        value: nrc,\n        className: classes.textField,\n        placeholder: \"000000/00/0\"\n      }), this.validator.message('nrc', nrc, 'required'))), __jsx(Fieldset, {\n        label: \"birthday\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(TextField, {\n        name: \"birthday\",\n        onChange: inputChange,\n        value: birthday,\n        className: classes.textField,\n        placeholder: \"DD/MM/YYYY\"\n      }), this.validator.message('birthday', birthday, 'required')))), __jsx(Row, {\n        title: \"Contact Details\"\n      }, __jsx(Fieldset, {\n        label: \"Address\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(TextField, {\n        name: \"address\",\n        onChange: inputChange,\n        value: address,\n        className: classes.textField,\n        placeholder: \"Street, City/Town, Province\"\n      }), this.validator.message('address', address, 'required'))), __jsx(Fieldset, {\n        label: \"Phone number\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(TextField, {\n        name: \"phone\",\n        onChange: inputChange,\n        value: phone,\n        className: classes.textField,\n        InputProps: {\n          startAdornment: __jsx(InputAdornment, {\n            position: \"start\"\n          }, \"+260\")\n        }\n      }), this.validator.message('phone', phone, 'required'))), __jsx(Fieldset, {\n        label: \"Email Address\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(TextField, {\n        name: \"email\",\n        onChange: inputChange,\n        value: email,\n        className: classes.textField,\n        placeholder: \"Your active Email Address\"\n      }), this.validator.message('email', email, 'required|email')))), __jsx(Row, {\n        title: \"Guardian Details\",\n        subtitle: \"(if less than 21)\"\n      }, __jsx(Fieldset, {\n        label: \"Full Names\"\n      }, __jsx(TextField, {\n        name: \"guardian\",\n        onChange: inputChange,\n        value: guardian,\n        className: classes.textField,\n        placeholder: \"Guardian Full Name\"\n      })), __jsx(Fieldset, {\n        label: \"Guardian Phone\"\n      }, __jsx(TextField, {\n        name: \"guardianPhone\",\n        onChange: inputChange,\n        value: guardianPhone,\n        className: classes.textField,\n        placeholder: \"Guardian Phone Number\"\n      }))), __jsx(Row, {\n        title: \"Additional Details\"\n      }, __jsx(Fieldset, {\n        label: \"University/ College\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(TextField, {\n        name: \"school\",\n        onChange: inputChange,\n        value: school,\n        className: classes.textField\n      }), this.validator.message('school', school, 'required'))), __jsx(Fieldset, {\n        label: \"Major\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(TextField, {\n        name: \"major\",\n        onChange: inputChange,\n        value: major,\n        className: classes.textField\n      }), this.validator.message('major', major, 'required'))), __jsx(Fieldset, {\n        label: \"Academic Qualification\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(Upload, {\n        name: \"certificate\",\n        files: certificate,\n        onChange: fileChange\n      }), this.validator.message('certificate', certificate, 'required'))), __jsx(Fieldset, {\n        label: \"Acceptance/ Recommendation Letter\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(Upload, {\n        name: \"letter\",\n        files: letter,\n        onChange: fileChange\n      }), this.validator.message('acceptance/recommendation', letter, 'required'))), __jsx(Fieldset, {\n        label: \"NRC\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(Upload, {\n        name: \"ids\",\n        files: ids,\n        multiple: true,\n        onChange: fileChange\n      }), this.validator.message('nrc attachment', ids, 'required'))), __jsx(Fieldset, {\n        label: \"2 Passport Size Photos\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(Upload, {\n        name: \"photos\",\n        files: photos,\n        multiple: true,\n        onChange: fileChange\n      }), this.validator.message('passport photos', photos, 'required')))), __jsx(Row, {\n        title: \"Payment\"\n      }, __jsx(Fieldset, {\n        label: \"Deposit Slip\",\n        required: true\n      }, __jsx(\"div\", {\n        className: classes.col\n      }, __jsx(Upload, {\n        name: \"payment\",\n        files: payment,\n        onChange: fileChange\n      }), this.validator.message('deposit slip', payment, 'required')))), __jsx(Terms, null), __jsx(\"div\", {\n        className: classes.actions\n      }, __jsx(List, {\n        component: \"nav\"\n      }, __jsx(ListItem, null, __jsx(ListItemIcon, null, __jsx(Icon, {\n        name: \"check\",\n        fill: theme.palette.primary.main\n      })), __jsx(ListItemText, {\n        primary: \"I agree to the above Terms & Conditions\"\n      }))), __jsx(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        size: \"large\",\n        variant: \"contained\"\n      }, __jsx(Typography, {\n        className: classes.typography\n      }, \"Submit Application\"), __jsx(CircularProgress, {\n        size: 20,\n        thickness: 4,\n        className: clsx(classes.progress, _defineProperty({}, classes.show, loading))\n      }))));\n    }\n  }]);\n\n  return _temp;\n}(Component), _temp)));","map":{"version":3,"sources":["/Users/me/dev/bur/src/app/components/form.js"],"names":["clsx","connect","React","Component","List","Radio","Button","ListItem","TextField","RadioGroup","Typography","SimpleReactValidator","ListItemText","ListItemIcon","InputAdornment","FormControlLabel","CircularProgress","Row","Icon","Terms","Upload","Fieldset","fileChange","inputChange","post","withStyles","styles","theme","color","actions","display","width","marginTop","marginBottom","flexDirection","alignItems","justifyContent","typography","marginRight","spacing","progress","show","col","withTheme","state","autoForceUpdate","e","preventDefault","props","data","validator","allValid","showMessages","alert","classes","files","loading","form","ids","letter","certificate","photos","payment","names","surname","phone","gender","address","email","birthday","school","major","guardian","guardianPhone","nrc","handleSubmit","textField","message","startAdornment","palette","primary","main"],"mappings":"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","sourcesContent":["import clsx from 'clsx'\nimport {connect} from 'react-redux'\nimport React, {Component} from 'react'\nimport List from '@material-ui/core/List'\nimport Radio from '@material-ui/core/Radio'\nimport Button from '@material-ui/core/Button'\nimport ListItem from '@material-ui/core/ListItem'\nimport TextField from '@material-ui/core/TextField'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Typography from '@material-ui/core/Typography'\nimport SimpleReactValidator from 'simple-react-validator'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Row from './row'\nimport Icon from './icons'\nimport Terms from './terms'\nimport Upload from './upload'\nimport Fieldset from './fieldset'\nimport {fileChange, inputChange, post} from '../lib/redux/actions/form'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nconst styles = theme => ({\n    '@global': {\n        '.srv-validation-message': {\n            color: '#900'\n        }\n    },\n    actions: {\n        display: 'flex',\n        width: '100%',\n        marginTop: 30,\n        marginBottom: 30,\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    typography: {\n        marginRight: theme.spacing() + 4\n    },\n    progress: {\n        color: 'white',\n        display: 'none'\n    },\n    show: {display: 'block'},\n    col: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%'\n    }\n})\n\nexport default withStyles(styles, {withTheme: true})(connect(state => state, {\n    fileChange,\n    inputChange,\n    post\n})(class extends Component {\n\n    validator = new SimpleReactValidator({autoForceUpdate: this})\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const {data, post} = this.props\n\n        if (this.validator.allValid()) {\n            post(data)\n        } else {\n            this.validator.showMessages()\n            alert('There are errors on the form.')\n        }\n    }\n\n    render() {\n        const {classes, theme, data, files, form: {loading}, fileChange, inputChange} = this.props\n        const {ids, letter, certificate, photos, payment} = files\n        const {names, surname, phone, gender, address, email, birthday, school, major, guardian, guardianPhone, nrc} = data\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <Row title='Personal Details'>\n                    <Fieldset label='Given Names' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='names'\n                                onChange={inputChange}\n                                value={names}\n                                className={classes.textField}\n                                placeholder='Enter exactly as stated on your NRC'\n                            />\n                            {this.validator.message('name', names, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Surname' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='surname'\n                                onChange={inputChange}\n                                value={surname}\n                                className={classes.textField}\n                                placeholder='Enter exactly as stated on your NRC'\n                            />\n                            {this.validator.message('surname', surname, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Gender' required>\n                        <div className={classes.col}>\n                            <RadioGroup aria-label='position' name='gender' value={gender} onChange={inputChange} row>\n                                <FormControlLabel\n                                    value='male'\n                                    control={<Radio color='primary' disableRipple/>}\n                                    label='Male'\n                                    labelPlacement='end'\n                                />\n                                <FormControlLabel\n                                    value='female'\n                                    control={<Radio color='primary' disableRipple/>}\n                                    label='Female'\n                                    labelPlacement='end'\n                                />\n                            </RadioGroup>\n                            {this.validator.message('gender', gender, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='NRC' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='nrc'\n                                onChange={inputChange}\n                                value={nrc}\n                                className={classes.textField}\n                                placeholder='000000/00/0'\n                            />\n                            {this.validator.message('nrc', nrc, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='birthday' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='birthday'\n                                onChange={inputChange}\n                                value={birthday}\n                                className={classes.textField}\n                                placeholder='DD/MM/YYYY'\n                            />\n                            {this.validator.message('birthday', birthday, 'required')}\n                        </div>\n                    </Fieldset>\n                </Row>\n                <Row title='Contact Details'>\n                    <Fieldset label='Address' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='address'\n                                onChange={inputChange}\n                                value={address}\n                                className={classes.textField}\n                                placeholder='Street, City/Town, Province'\n                            />\n                            {this.validator.message('address', address, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Phone number' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='phone'\n                                onChange={inputChange}\n                                value={phone}\n                                className={classes.textField}\n                                InputProps={{\n                                    startAdornment: <InputAdornment position='start'>+260</InputAdornment>\n                                }}\n                            />\n                            {this.validator.message('phone', phone, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Email Address' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='email'\n                                onChange={inputChange}\n                                value={email}\n                                className={classes.textField}\n                                placeholder='Your active Email Address'\n                            />\n                            {this.validator.message('email', email, 'required|email')}\n                        </div>\n                    </Fieldset>\n                </Row>\n                <Row title='Guardian Details' subtitle='(if less than 21)'>\n                    <Fieldset label='Full Names'>\n                        <TextField\n                            name='guardian'\n                            onChange={inputChange}\n                            value={guardian}\n                            className={classes.textField}\n                            placeholder='Guardian Full Name'\n                        />\n                    </Fieldset>\n                    <Fieldset label='Guardian Phone'>\n                        <TextField\n                            name='guardianPhone'\n                            onChange={inputChange}\n                            value={guardianPhone}\n                            className={classes.textField}\n                            placeholder='Guardian Phone Number'\n                        />\n                    </Fieldset>\n                </Row>\n                <Row title='Additional Details'>\n                    <Fieldset label='University/ College' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='school'\n                                onChange={inputChange}\n                                value={school}\n                                className={classes.textField}\n                            />\n                            {this.validator.message('school', school, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Major' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='major'\n                                onChange={inputChange}\n                                value={major}\n                                className={classes.textField}\n                            />\n                            {this.validator.message('major', major, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Academic Qualification' required>\n                        <div className={classes.col}>\n                            <Upload name='certificate' files={certificate} onChange={fileChange}/>\n                            {this.validator.message('certificate', certificate, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Acceptance/ Recommendation Letter' required>\n                        <div className={classes.col}>\n                            <Upload name='letter' files={letter} onChange={fileChange}/>\n                            {this.validator.message('acceptance/recommendation', letter, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='NRC' required>\n                        <div className={classes.col}>\n                            <Upload name='ids' files={ids} multiple onChange={fileChange}/>\n                            {this.validator.message('nrc attachment', ids, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='2 Passport Size Photos' required>\n                        <div className={classes.col}>\n                            <Upload name='photos' files={photos} multiple onChange={fileChange}/>\n                            {this.validator.message('passport photos', photos, 'required')}\n                        </div>\n                    </Fieldset>\n                </Row>\n                <Row title='Payment'>\n                    <Fieldset label='Deposit Slip' required>\n                        <div className={classes.col}>\n                            <Upload name='payment' files={payment} onChange={fileChange}/>\n                            {this.validator.message('deposit slip', payment, 'required')}\n                        </div>\n                    </Fieldset>\n                </Row>\n                <Terms/>\n                <div className={classes.actions}>\n                    <List component='nav'>\n                        <ListItem>\n                            <ListItemIcon>\n                                <Icon name='check' fill={theme.palette.primary.main}/>\n                            </ListItemIcon>\n                            <ListItemText primary='I agree to the above Terms & Conditions'/>\n                        </ListItem>\n                    </List>\n                    <Button type='submit' color='primary' size='large' variant='contained'>\n                        <Typography className={classes.typography}>Submit Application</Typography>\n                        <CircularProgress size={20} thickness={4} className={clsx(classes.progress, {[classes.show]: loading})}/>\n                    </Button>\n                </div>\n            </form>\n        )\n    }\n}))"]},"metadata":{},"sourceType":"module"}