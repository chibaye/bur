{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport NextLink from 'next/link';\nimport Link from '@material-ui/core/Link';\nexport default ((_ref) => {\n  let {\n    children,\n    href,\n    name = ''\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"href\", \"name\"]);\n\n  const [title, arg] = name.split(',');\n  const url = href ? href : (/^-?\\d+$/.test(arg) ? arg < 0 ? '' : title.split(' ')[arg] : arg || title.replace(new RegExp(' ', 'g'), '-')).toLowerCase();\n  return __jsx(NextLink, {\n    href: url\n  }, __jsx(Link, _extends({\n    href: url,\n    noWrap: true\n  }, rest), children ? children : title));\n});","map":{"version":3,"sources":["/Users/me/dev/bur/src/app/components/link.js"],"names":["React","NextLink","Link","children","href","name","rest","title","arg","split","url","test","replace","RegExp","toLowerCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,gBAAe,UAAwC;AAAA,MAAvC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,IAAI,GAAC;AAAtB,GAAuC;AAAA,MAAVC,IAAU;;AACnD,QAAM,CAACC,KAAD,EAAQC,GAAR,IAAeH,IAAI,CAACI,KAAL,CAAW,GAAX,CAArB;AACA,QAAMC,GAAG,GAAGN,IAAI,GAAGA,IAAH,GAAU,CAAC,UAAUO,IAAV,CAAeH,GAAf,IAAsBA,GAAG,GAAG,CAAN,GAAU,EAAV,GAAeD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiBD,GAAjB,CAArC,GAA6DA,GAAG,IAAID,KAAK,CAACK,OAAN,CAAc,IAAIC,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAAd,EAAoC,GAApC,CAArE,EAA+GC,WAA/G,EAA1B;AAEA,SAAO,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ;AAAhB,KACH,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,GAAZ;AAAiB,IAAA,MAAM;AAAvB,KAA4BJ,IAA5B,GAAmCH,QAAQ,GAAGA,QAAH,GAAcI,KAAzD,CADG,CAAP;AAGH,CAPD","sourcesContent":["import React from 'react'\nimport NextLink from 'next/link'\nimport Link from '@material-ui/core/Link'\n\nexport default ({children, href, name='', ...rest}) => {\n    const [title, arg] = name.split(',')\n    const url = href ? href : (/^-?\\d+$/.test(arg) ? arg < 0 ? '' : title.split(' ')[arg] : arg || title.replace(new RegExp(' ', 'g'), '-')).toLowerCase()\n\n    return <NextLink href={url}>\n        <Link href={url} noWrap {...rest}>{children ? children : title}</Link>\n    </NextLink>\n}"]},"metadata":{},"sourceType":"module"}