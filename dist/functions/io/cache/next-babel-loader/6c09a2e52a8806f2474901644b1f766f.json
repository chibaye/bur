{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _temp;\n\nvar __jsx = React.createElement;\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\nimport SimpleReactValidator from 'simple-react-validator';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Row from './row';\nimport Icon from './icons';\nimport Terms from './terms';\nimport Upload from './upload';\nimport Fieldset from './fieldset';\nimport { fileChange, inputChange, post } from '../lib/redux/actions/form';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  '@global': {\n    '.srv-validation-message': {\n      color: '#900'\n    }\n  },\n  actions: {\n    display: 'flex',\n    width: '100%',\n    marginTop: 30,\n    marginBottom: 30,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  typography: {\n    marginRight: theme.spacing() + 4\n  },\n  progress: {\n    color: 'white',\n    display: 'none'\n  },\n  show: {\n    display: 'block'\n  },\n  col: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%'\n  }\n});\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(state => state, {\n  fileChange,\n  inputChange,\n  post\n})((_temp = class extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"validator\", new SimpleReactValidator({\n      autoForceUpdate: this\n    }));\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      const {\n        data,\n        post\n      } = this.props;\n\n      if (this.validator.allValid()) {\n        post(data);\n      } else {\n        this.validator.showMessages();\n        alert('There are errors on the form.');\n      }\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      theme,\n      data,\n      files,\n      form: {\n        loading\n      },\n      fileChange,\n      inputChange\n    } = this.props;\n    const {\n      ids,\n      letter,\n      certificate,\n      photos,\n      payment\n    } = files;\n    const {\n      names,\n      surname,\n      phone,\n      gender,\n      address,\n      email,\n      birthday,\n      school,\n      major,\n      guardian,\n      guardianPhone,\n      nrc\n    } = data;\n    return __jsx(\"form\", {\n      onSubmit: this.handleSubmit\n    }, __jsx(Row, {\n      title: \"Personal Details\"\n    }, __jsx(Fieldset, {\n      label: \"Given Names\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(TextField, {\n      name: \"names\",\n      onChange: inputChange,\n      value: names,\n      className: classes.textField,\n      placeholder: \"Enter exactly as stated on your NRC\"\n    }), this.validator.message('name', names, 'required'))), __jsx(Fieldset, {\n      label: \"Surname\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(TextField, {\n      name: \"surname\",\n      onChange: inputChange,\n      value: surname,\n      className: classes.textField,\n      placeholder: \"Enter exactly as stated on your NRC\"\n    }), this.validator.message('surname', surname, 'required'))), __jsx(Fieldset, {\n      label: \"Gender\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(RadioGroup, {\n      \"aria-label\": \"position\",\n      name: \"gender\",\n      value: gender,\n      onChange: inputChange,\n      row: true\n    }, __jsx(FormControlLabel, {\n      value: \"male\",\n      control: __jsx(Radio, {\n        color: \"primary\",\n        disableRipple: true\n      }),\n      label: \"Male\",\n      labelPlacement: \"end\"\n    }), __jsx(FormControlLabel, {\n      value: \"female\",\n      control: __jsx(Radio, {\n        color: \"primary\",\n        disableRipple: true\n      }),\n      label: \"Female\",\n      labelPlacement: \"end\"\n    })), this.validator.message('gender', gender, 'required'))), __jsx(Fieldset, {\n      label: \"NRC\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(TextField, {\n      name: \"nrc\",\n      onChange: inputChange,\n      value: nrc,\n      className: classes.textField,\n      placeholder: \"000000/00/0\"\n    }), this.validator.message('nrc', nrc, 'required'))), __jsx(Fieldset, {\n      label: \"birthday\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(TextField, {\n      name: \"birthday\",\n      onChange: inputChange,\n      value: birthday,\n      className: classes.textField,\n      placeholder: \"DD/MM/YYYY\"\n    }), this.validator.message('birthday', birthday, 'required')))), __jsx(Row, {\n      title: \"Contact Details\"\n    }, __jsx(Fieldset, {\n      label: \"Address\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(TextField, {\n      name: \"address\",\n      onChange: inputChange,\n      value: address,\n      className: classes.textField,\n      placeholder: \"Street, City/Town, Province\"\n    }), this.validator.message('address', address, 'required'))), __jsx(Fieldset, {\n      label: \"Phone number\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(TextField, {\n      name: \"phone\",\n      onChange: inputChange,\n      value: phone,\n      className: classes.textField,\n      InputProps: {\n        startAdornment: __jsx(InputAdornment, {\n          position: \"start\"\n        }, \"+260\")\n      }\n    }), this.validator.message('phone', phone, 'required'))), __jsx(Fieldset, {\n      label: \"Email Address\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(TextField, {\n      name: \"email\",\n      onChange: inputChange,\n      value: email,\n      className: classes.textField,\n      placeholder: \"Your active Email Address\"\n    }), this.validator.message('email', email, 'required|email')))), __jsx(Row, {\n      title: \"Guardian Details\",\n      subtitle: \"(if less than 21)\"\n    }, __jsx(Fieldset, {\n      label: \"Full Names\"\n    }, __jsx(TextField, {\n      name: \"guardian\",\n      onChange: inputChange,\n      value: guardian,\n      className: classes.textField,\n      placeholder: \"Guardian Full Name\"\n    })), __jsx(Fieldset, {\n      label: \"Guardian Phone\"\n    }, __jsx(TextField, {\n      name: \"guardianPhone\",\n      onChange: inputChange,\n      value: guardianPhone,\n      className: classes.textField,\n      placeholder: \"Guardian Phone Number\"\n    }))), __jsx(Row, {\n      title: \"Additional Details\"\n    }, __jsx(Fieldset, {\n      label: \"University/ College\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(TextField, {\n      name: \"school\",\n      onChange: inputChange,\n      value: school,\n      className: classes.textField\n    }), this.validator.message('school', school, 'required'))), __jsx(Fieldset, {\n      label: \"Major\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(TextField, {\n      name: \"major\",\n      onChange: inputChange,\n      value: major,\n      className: classes.textField\n    }), this.validator.message('major', major, 'required'))), __jsx(Fieldset, {\n      label: \"Academic Qualification\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(Upload, {\n      name: \"certificate\",\n      files: certificate,\n      onChange: fileChange\n    }), this.validator.message('certificate', certificate, 'required'))), __jsx(Fieldset, {\n      label: \"Acceptance/ Recommendation Letter\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(Upload, {\n      name: \"letter\",\n      files: letter,\n      onChange: fileChange\n    }), this.validator.message('acceptance/recommendation', letter, 'required'))), __jsx(Fieldset, {\n      label: \"NRC\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(Upload, {\n      name: \"ids\",\n      files: ids,\n      multiple: true,\n      onChange: fileChange\n    }), this.validator.message('nrc attachment', ids, 'required'))), __jsx(Fieldset, {\n      label: \"2 Passport Size Photos\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(Upload, {\n      name: \"photos\",\n      files: photos,\n      multiple: true,\n      onChange: fileChange\n    }), this.validator.message('passport photos', photos, 'required')))), __jsx(Row, {\n      title: \"Payment\"\n    }, __jsx(Fieldset, {\n      label: \"Deposit Slip\",\n      required: true\n    }, __jsx(\"div\", {\n      className: classes.col\n    }, __jsx(Upload, {\n      name: \"payment\",\n      files: payment,\n      onChange: fileChange\n    }), this.validator.message('deposit slip', payment, 'required')))), __jsx(Terms, null), __jsx(\"div\", {\n      className: classes.actions\n    }, __jsx(List, {\n      component: \"nav\"\n    }, __jsx(ListItem, null, __jsx(ListItemIcon, null, __jsx(Icon, {\n      name: \"check\",\n      fill: theme.palette.primary.main\n    })), __jsx(ListItemText, {\n      primary: \"I agree to the above Terms & Conditions\"\n    }))), __jsx(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"large\",\n      variant: \"contained\"\n    }, __jsx(Typography, {\n      className: classes.typography\n    }, \"Submit Application\"), __jsx(CircularProgress, {\n      size: 20,\n      thickness: 4,\n      className: clsx(classes.progress, {\n        [classes.show]: loading\n      })\n    }))));\n  }\n\n}, _temp)));","map":{"version":3,"sources":["/Users/me/dev/bur/src/app/components/form.js"],"names":["clsx","connect","React","Component","List","Radio","Button","ListItem","TextField","RadioGroup","Typography","SimpleReactValidator","ListItemText","ListItemIcon","InputAdornment","FormControlLabel","CircularProgress","Row","Icon","Terms","Upload","Fieldset","fileChange","inputChange","post","withStyles","styles","theme","color","actions","display","width","marginTop","marginBottom","flexDirection","alignItems","justifyContent","typography","marginRight","spacing","progress","show","col","withTheme","state","autoForceUpdate","e","preventDefault","data","props","validator","allValid","showMessages","alert","render","classes","files","form","loading","ids","letter","certificate","photos","payment","names","surname","phone","gender","address","email","birthday","school","major","guardian","guardianPhone","nrc","handleSubmit","textField","message","startAdornment","palette","primary","main"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,IAAjC,QAA4C,2BAA5C;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrB,aAAW;AACP,+BAA2B;AACvBC,MAAAA,KAAK,EAAE;AADgB;AADpB,GADU;AAMrBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,SAAS,EAAE,EAHN;AAILC,IAAAA,YAAY,EAAE,EAJT;AAKLC,IAAAA,aAAa,EAAE,QALV;AAMLC,IAAAA,UAAU,EAAE,QANP;AAOLC,IAAAA,cAAc,EAAE;AAPX,GANY;AAerBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,WAAW,EAAEX,KAAK,CAACY,OAAN,KAAkB;AADvB,GAfS;AAkBrBC,EAAAA,QAAQ,EAAE;AACNZ,IAAAA,KAAK,EAAE,OADD;AAENE,IAAAA,OAAO,EAAE;AAFH,GAlBW;AAsBrBW,EAAAA,IAAI,EAAE;AAACX,IAAAA,OAAO,EAAE;AAAV,GAtBe;AAuBrBY,EAAAA,GAAG,EAAE;AACDZ,IAAAA,OAAO,EAAE,MADR;AAEDI,IAAAA,aAAa,EAAE,QAFd;AAGDH,IAAAA,KAAK,EAAE;AAHN;AAvBgB,CAAL,CAApB;;AA8BA,eAAeN,UAAU,CAACC,MAAD,EAAS;AAACiB,EAAAA,SAAS,EAAE;AAAZ,CAAT,CAAV,CAAsC1C,OAAO,CAAC2C,KAAK,IAAIA,KAAV,EAAiB;AACzEtB,EAAAA,UADyE;AAEzEC,EAAAA,WAFyE;AAGzEC,EAAAA;AAHyE,CAAjB,CAAP,UAIlD,cAAcrB,SAAd,CAAwB;AAAA;AAAA;;AAAA,uCAEX,IAAIQ,oBAAJ,CAAyB;AAACkC,MAAAA,eAAe,EAAE;AAAlB,KAAzB,CAFW;;AAAA,0CAIRC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAACC,QAAAA,IAAD;AAAOxB,QAAAA;AAAP,UAAe,KAAKyB,KAA1B;;AAEA,UAAI,KAAKC,SAAL,CAAeC,QAAf,EAAJ,EAA+B;AAC3B3B,QAAAA,IAAI,CAACwB,IAAD,CAAJ;AACH,OAFD,MAEO;AACH,aAAKE,SAAL,CAAeE,YAAf;AACAC,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACH;AACJ,KAdsB;AAAA;;AAgBvBC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,OAAD;AAAU5B,MAAAA,KAAV;AAAiBqB,MAAAA,IAAjB;AAAuBQ,MAAAA,KAAvB;AAA8BC,MAAAA,IAAI,EAAE;AAACC,QAAAA;AAAD,OAApC;AAA+CpC,MAAAA,UAA/C;AAA2DC,MAAAA;AAA3D,QAA0E,KAAK0B,KAArF;AACA,UAAM;AAACU,MAAAA,GAAD;AAAMC,MAAAA,MAAN;AAAcC,MAAAA,WAAd;AAA2BC,MAAAA,MAA3B;AAAmCC,MAAAA;AAAnC,QAA8CP,KAApD;AACA,UAAM;AAACQ,MAAAA,KAAD;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA,MAAxB;AAAgCC,MAAAA,OAAhC;AAAyCC,MAAAA,KAAzC;AAAgDC,MAAAA,QAAhD;AAA0DC,MAAAA,MAA1D;AAAkEC,MAAAA,KAAlE;AAAyEC,MAAAA,QAAzE;AAAmFC,MAAAA,aAAnF;AAAkGC,MAAAA;AAAlG,QAAyG3B,IAA/G;AAEA,WACI;AAAM,MAAA,QAAQ,EAAE,KAAK4B;AAArB,OACI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAC;AAAX,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,aAAhB;AAA8B,MAAA,QAAQ;AAAtC,OACI;AAAK,MAAA,SAAS,EAAErB,OAAO,CAACb;AAAxB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAEnB,WAFd;AAGI,MAAA,KAAK,EAAEyC,KAHX;AAII,MAAA,SAAS,EAAET,OAAO,CAACsB,SAJvB;AAKI,MAAA,WAAW,EAAC;AALhB,MADJ,EAQK,KAAK3B,SAAL,CAAe4B,OAAf,CAAuB,MAAvB,EAA+Bd,KAA/B,EAAsC,UAAtC,CARL,CADJ,CADJ,EAaI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAA0B,MAAA,QAAQ;AAAlC,OACI;AAAK,MAAA,SAAS,EAAET,OAAO,CAACb;AAAxB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,QAAQ,EAAEnB,WAFd;AAGI,MAAA,KAAK,EAAE0C,OAHX;AAII,MAAA,SAAS,EAAEV,OAAO,CAACsB,SAJvB;AAKI,MAAA,WAAW,EAAC;AALhB,MADJ,EAQK,KAAK3B,SAAL,CAAe4B,OAAf,CAAuB,SAAvB,EAAkCb,OAAlC,EAA2C,UAA3C,CARL,CADJ,CAbJ,EAyBI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAyB,MAAA,QAAQ;AAAjC,OACI;AAAK,MAAA,SAAS,EAAEV,OAAO,CAACb;AAAxB,OACI,MAAC,UAAD;AAAY,oBAAW,UAAvB;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAgD,MAAA,KAAK,EAAEyB,MAAvD;AAA+D,MAAA,QAAQ,EAAE5C,WAAzE;AAAsF,MAAA,GAAG;AAAzF,OACI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAC,MADV;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAuB,QAAA,aAAa;AAApC,QAFb;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,cAAc,EAAC;AAJnB,MADJ,EAOI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAC,QADV;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAuB,QAAA,aAAa;AAApC,QAFb;AAGI,MAAA,KAAK,EAAC,QAHV;AAII,MAAA,cAAc,EAAC;AAJnB,MAPJ,CADJ,EAeK,KAAK2B,SAAL,CAAe4B,OAAf,CAAuB,QAAvB,EAAiCX,MAAjC,EAAyC,UAAzC,CAfL,CADJ,CAzBJ,EA4CI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAsB,MAAA,QAAQ;AAA9B,OACI;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACb;AAAxB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,KADT;AAEI,MAAA,QAAQ,EAAEnB,WAFd;AAGI,MAAA,KAAK,EAAEoD,GAHX;AAII,MAAA,SAAS,EAAEpB,OAAO,CAACsB,SAJvB;AAKI,MAAA,WAAW,EAAC;AALhB,MADJ,EAQK,KAAK3B,SAAL,CAAe4B,OAAf,CAAuB,KAAvB,EAA8BH,GAA9B,EAAmC,UAAnC,CARL,CADJ,CA5CJ,EAwDI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,UAAhB;AAA2B,MAAA,QAAQ;AAAnC,OACI;AAAK,MAAA,SAAS,EAAEpB,OAAO,CAACb;AAAxB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,QAAQ,EAAEnB,WAFd;AAGI,MAAA,KAAK,EAAE+C,QAHX;AAII,MAAA,SAAS,EAAEf,OAAO,CAACsB,SAJvB;AAKI,MAAA,WAAW,EAAC;AALhB,MADJ,EAQK,KAAK3B,SAAL,CAAe4B,OAAf,CAAuB,UAAvB,EAAmCR,QAAnC,EAA6C,UAA7C,CARL,CADJ,CAxDJ,CADJ,EAsEI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAC;AAAX,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAA0B,MAAA,QAAQ;AAAlC,OACI;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACb;AAAxB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,QAAQ,EAAEnB,WAFd;AAGI,MAAA,KAAK,EAAE6C,OAHX;AAII,MAAA,SAAS,EAAEb,OAAO,CAACsB,SAJvB;AAKI,MAAA,WAAW,EAAC;AALhB,MADJ,EAQK,KAAK3B,SAAL,CAAe4B,OAAf,CAAuB,SAAvB,EAAkCV,OAAlC,EAA2C,UAA3C,CARL,CADJ,CADJ,EAaI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,cAAhB;AAA+B,MAAA,QAAQ;AAAvC,OACI;AAAK,MAAA,SAAS,EAAEb,OAAO,CAACb;AAAxB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAEnB,WAFd;AAGI,MAAA,KAAK,EAAE2C,KAHX;AAII,MAAA,SAAS,EAAEX,OAAO,CAACsB,SAJvB;AAKI,MAAA,UAAU,EAAE;AACRE,QAAAA,cAAc,EAAE,MAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC;AAAzB;AADR;AALhB,MADJ,EAUK,KAAK7B,SAAL,CAAe4B,OAAf,CAAuB,OAAvB,EAAgCZ,KAAhC,EAAuC,UAAvC,CAVL,CADJ,CAbJ,EA2BI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,eAAhB;AAAgC,MAAA,QAAQ;AAAxC,OACI;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACb;AAAxB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAEnB,WAFd;AAGI,MAAA,KAAK,EAAE8C,KAHX;AAII,MAAA,SAAS,EAAEd,OAAO,CAACsB,SAJvB;AAKI,MAAA,WAAW,EAAC;AALhB,MADJ,EAQK,KAAK3B,SAAL,CAAe4B,OAAf,CAAuB,OAAvB,EAAgCT,KAAhC,EAAuC,gBAAvC,CARL,CADJ,CA3BJ,CAtEJ,EA8GI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAC,kBAAX;AAA8B,MAAA,QAAQ,EAAC;AAAvC,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC;AAAhB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,QAAQ,EAAE9C,WAFd;AAGI,MAAA,KAAK,EAAEkD,QAHX;AAII,MAAA,SAAS,EAAElB,OAAO,CAACsB,SAJvB;AAKI,MAAA,WAAW,EAAC;AALhB,MADJ,CADJ,EAUI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC;AAAhB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,eADT;AAEI,MAAA,QAAQ,EAAEtD,WAFd;AAGI,MAAA,KAAK,EAAEmD,aAHX;AAII,MAAA,SAAS,EAAEnB,OAAO,CAACsB,SAJvB;AAKI,MAAA,WAAW,EAAC;AALhB,MADJ,CAVJ,CA9GJ,EAkII,MAAC,GAAD;AAAK,MAAA,KAAK,EAAC;AAAX,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,qBAAhB;AAAsC,MAAA,QAAQ;AAA9C,OACI;AAAK,MAAA,SAAS,EAAEtB,OAAO,CAACb;AAAxB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,QAAQ,EAAEnB,WAFd;AAGI,MAAA,KAAK,EAAEgD,MAHX;AAII,MAAA,SAAS,EAAEhB,OAAO,CAACsB;AAJvB,MADJ,EAOK,KAAK3B,SAAL,CAAe4B,OAAf,CAAuB,QAAvB,EAAiCP,MAAjC,EAAyC,UAAzC,CAPL,CADJ,CADJ,EAYI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,QAAQ;AAAhC,OACI;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACb;AAAxB,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAEnB,WAFd;AAGI,MAAA,KAAK,EAAEiD,KAHX;AAII,MAAA,SAAS,EAAEjB,OAAO,CAACsB;AAJvB,MADJ,EAOK,KAAK3B,SAAL,CAAe4B,OAAf,CAAuB,OAAvB,EAAgCN,KAAhC,EAAuC,UAAvC,CAPL,CADJ,CAZJ,EAuBI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,wBAAhB;AAAyC,MAAA,QAAQ;AAAjD,OACI;AAAK,MAAA,SAAS,EAAEjB,OAAO,CAACb;AAAxB,OACI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,aAAb;AAA2B,MAAA,KAAK,EAAEmB,WAAlC;AAA+C,MAAA,QAAQ,EAAEvC;AAAzD,MADJ,EAEK,KAAK4B,SAAL,CAAe4B,OAAf,CAAuB,aAAvB,EAAsCjB,WAAtC,EAAmD,UAAnD,CAFL,CADJ,CAvBJ,EA6BI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,mCAAhB;AAAoD,MAAA,QAAQ;AAA5D,OACI;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACb;AAAxB,OACI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAEkB,MAA7B;AAAqC,MAAA,QAAQ,EAAEtC;AAA/C,MADJ,EAEK,KAAK4B,SAAL,CAAe4B,OAAf,CAAuB,2BAAvB,EAAoDlB,MAApD,EAA4D,UAA5D,CAFL,CADJ,CA7BJ,EAmCI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAsB,MAAA,QAAQ;AAA9B,OACI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACb;AAAxB,OACI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAmB,MAAA,KAAK,EAAEiB,GAA1B;AAA+B,MAAA,QAAQ,MAAvC;AAAwC,MAAA,QAAQ,EAAErC;AAAlD,MADJ,EAEK,KAAK4B,SAAL,CAAe4B,OAAf,CAAuB,gBAAvB,EAAyCnB,GAAzC,EAA8C,UAA9C,CAFL,CADJ,CAnCJ,EAyCI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,wBAAhB;AAAyC,MAAA,QAAQ;AAAjD,OACI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACb;AAAxB,OACI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAEoB,MAA7B;AAAqC,MAAA,QAAQ,MAA7C;AAA8C,MAAA,QAAQ,EAAExC;AAAxD,MADJ,EAEK,KAAK4B,SAAL,CAAe4B,OAAf,CAAuB,iBAAvB,EAA0ChB,MAA1C,EAAkD,UAAlD,CAFL,CADJ,CAzCJ,CAlIJ,EAkLI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAC;AAAX,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,cAAhB;AAA+B,MAAA,QAAQ;AAAvC,OACI;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACb;AAAxB,OACI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,KAAK,EAAEqB,OAA9B;AAAuC,MAAA,QAAQ,EAAEzC;AAAjD,MADJ,EAEK,KAAK4B,SAAL,CAAe4B,OAAf,CAAuB,cAAvB,EAAuCf,OAAvC,EAAgD,UAAhD,CAFL,CADJ,CADJ,CAlLJ,EA0LI,MAAC,KAAD,OA1LJ,EA2LI;AAAK,MAAA,SAAS,EAAER,OAAO,CAAC1B;AAAxB,OACI,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC;AAAhB,OACI,MAAC,QAAD,QACI,MAAC,YAAD,QACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,IAAI,EAAEF,KAAK,CAACqD,OAAN,CAAcC,OAAd,CAAsBC;AAA/C,MADJ,CADJ,EAII,MAAC,YAAD;AAAc,MAAA,OAAO,EAAC;AAAtB,MAJJ,CADJ,CADJ,EASI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,SAA5B;AAAsC,MAAA,IAAI,EAAC,OAA3C;AAAmD,MAAA,OAAO,EAAC;AAA3D,OACI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAE3B,OAAO,CAAClB;AAA/B,4BADJ,EAEI,MAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,SAAS,EAAE,CAAvC;AAA0C,MAAA,SAAS,EAAErC,IAAI,CAACuD,OAAO,CAACf,QAAT,EAAmB;AAAC,SAACe,OAAO,CAACd,IAAT,GAAgBiB;AAAjB,OAAnB;AAAzD,MAFJ,CATJ,CA3LJ,CADJ;AA4MH;;AAjOsB,CAJ0B,SAAtC,CAAf","sourcesContent":["import clsx from 'clsx'\nimport {connect} from 'react-redux'\nimport React, {Component} from 'react'\nimport List from '@material-ui/core/List'\nimport Radio from '@material-ui/core/Radio'\nimport Button from '@material-ui/core/Button'\nimport ListItem from '@material-ui/core/ListItem'\nimport TextField from '@material-ui/core/TextField'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Typography from '@material-ui/core/Typography'\nimport SimpleReactValidator from 'simple-react-validator'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Row from './row'\nimport Icon from './icons'\nimport Terms from './terms'\nimport Upload from './upload'\nimport Fieldset from './fieldset'\nimport {fileChange, inputChange, post} from '../lib/redux/actions/form'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nconst styles = theme => ({\n    '@global': {\n        '.srv-validation-message': {\n            color: '#900'\n        }\n    },\n    actions: {\n        display: 'flex',\n        width: '100%',\n        marginTop: 30,\n        marginBottom: 30,\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    typography: {\n        marginRight: theme.spacing() + 4\n    },\n    progress: {\n        color: 'white',\n        display: 'none'\n    },\n    show: {display: 'block'},\n    col: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%'\n    }\n})\n\nexport default withStyles(styles, {withTheme: true})(connect(state => state, {\n    fileChange,\n    inputChange,\n    post\n})(class extends Component {\n\n    validator = new SimpleReactValidator({autoForceUpdate: this})\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const {data, post} = this.props\n\n        if (this.validator.allValid()) {\n            post(data)\n        } else {\n            this.validator.showMessages()\n            alert('There are errors on the form.')\n        }\n    }\n\n    render() {\n        const {classes, theme, data, files, form: {loading}, fileChange, inputChange} = this.props\n        const {ids, letter, certificate, photos, payment} = files\n        const {names, surname, phone, gender, address, email, birthday, school, major, guardian, guardianPhone, nrc} = data\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <Row title='Personal Details'>\n                    <Fieldset label='Given Names' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='names'\n                                onChange={inputChange}\n                                value={names}\n                                className={classes.textField}\n                                placeholder='Enter exactly as stated on your NRC'\n                            />\n                            {this.validator.message('name', names, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Surname' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='surname'\n                                onChange={inputChange}\n                                value={surname}\n                                className={classes.textField}\n                                placeholder='Enter exactly as stated on your NRC'\n                            />\n                            {this.validator.message('surname', surname, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Gender' required>\n                        <div className={classes.col}>\n                            <RadioGroup aria-label='position' name='gender' value={gender} onChange={inputChange} row>\n                                <FormControlLabel\n                                    value='male'\n                                    control={<Radio color='primary' disableRipple/>}\n                                    label='Male'\n                                    labelPlacement='end'\n                                />\n                                <FormControlLabel\n                                    value='female'\n                                    control={<Radio color='primary' disableRipple/>}\n                                    label='Female'\n                                    labelPlacement='end'\n                                />\n                            </RadioGroup>\n                            {this.validator.message('gender', gender, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='NRC' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='nrc'\n                                onChange={inputChange}\n                                value={nrc}\n                                className={classes.textField}\n                                placeholder='000000/00/0'\n                            />\n                            {this.validator.message('nrc', nrc, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='birthday' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='birthday'\n                                onChange={inputChange}\n                                value={birthday}\n                                className={classes.textField}\n                                placeholder='DD/MM/YYYY'\n                            />\n                            {this.validator.message('birthday', birthday, 'required')}\n                        </div>\n                    </Fieldset>\n                </Row>\n                <Row title='Contact Details'>\n                    <Fieldset label='Address' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='address'\n                                onChange={inputChange}\n                                value={address}\n                                className={classes.textField}\n                                placeholder='Street, City/Town, Province'\n                            />\n                            {this.validator.message('address', address, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Phone number' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='phone'\n                                onChange={inputChange}\n                                value={phone}\n                                className={classes.textField}\n                                InputProps={{\n                                    startAdornment: <InputAdornment position='start'>+260</InputAdornment>\n                                }}\n                            />\n                            {this.validator.message('phone', phone, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Email Address' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='email'\n                                onChange={inputChange}\n                                value={email}\n                                className={classes.textField}\n                                placeholder='Your active Email Address'\n                            />\n                            {this.validator.message('email', email, 'required|email')}\n                        </div>\n                    </Fieldset>\n                </Row>\n                <Row title='Guardian Details' subtitle='(if less than 21)'>\n                    <Fieldset label='Full Names'>\n                        <TextField\n                            name='guardian'\n                            onChange={inputChange}\n                            value={guardian}\n                            className={classes.textField}\n                            placeholder='Guardian Full Name'\n                        />\n                    </Fieldset>\n                    <Fieldset label='Guardian Phone'>\n                        <TextField\n                            name='guardianPhone'\n                            onChange={inputChange}\n                            value={guardianPhone}\n                            className={classes.textField}\n                            placeholder='Guardian Phone Number'\n                        />\n                    </Fieldset>\n                </Row>\n                <Row title='Additional Details'>\n                    <Fieldset label='University/ College' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='school'\n                                onChange={inputChange}\n                                value={school}\n                                className={classes.textField}\n                            />\n                            {this.validator.message('school', school, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Major' required>\n                        <div className={classes.col}>\n                            <TextField\n                                name='major'\n                                onChange={inputChange}\n                                value={major}\n                                className={classes.textField}\n                            />\n                            {this.validator.message('major', major, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Academic Qualification' required>\n                        <div className={classes.col}>\n                            <Upload name='certificate' files={certificate} onChange={fileChange}/>\n                            {this.validator.message('certificate', certificate, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='Acceptance/ Recommendation Letter' required>\n                        <div className={classes.col}>\n                            <Upload name='letter' files={letter} onChange={fileChange}/>\n                            {this.validator.message('acceptance/recommendation', letter, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='NRC' required>\n                        <div className={classes.col}>\n                            <Upload name='ids' files={ids} multiple onChange={fileChange}/>\n                            {this.validator.message('nrc attachment', ids, 'required')}\n                        </div>\n                    </Fieldset>\n                    <Fieldset label='2 Passport Size Photos' required>\n                        <div className={classes.col}>\n                            <Upload name='photos' files={photos} multiple onChange={fileChange}/>\n                            {this.validator.message('passport photos', photos, 'required')}\n                        </div>\n                    </Fieldset>\n                </Row>\n                <Row title='Payment'>\n                    <Fieldset label='Deposit Slip' required>\n                        <div className={classes.col}>\n                            <Upload name='payment' files={payment} onChange={fileChange}/>\n                            {this.validator.message('deposit slip', payment, 'required')}\n                        </div>\n                    </Fieldset>\n                </Row>\n                <Terms/>\n                <div className={classes.actions}>\n                    <List component='nav'>\n                        <ListItem>\n                            <ListItemIcon>\n                                <Icon name='check' fill={theme.palette.primary.main}/>\n                            </ListItemIcon>\n                            <ListItemText primary='I agree to the above Terms & Conditions'/>\n                        </ListItem>\n                    </List>\n                    <Button type='submit' color='primary' size='large' variant='contained'>\n                        <Typography className={classes.typography}>Submit Application</Typography>\n                        <CircularProgress size={20} thickness={4} className={clsx(classes.progress, {[classes.show]: loading})}/>\n                    </Button>\n                </div>\n            </form>\n        )\n    }\n}))"]},"metadata":{},"sourceType":"module"}