{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport File from './icons/file';\nvar styles = makeStyles(function (theme) {\n  return {\n    row: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    input: {\n      width: 460,\n      height: 32,\n      opacity: 0,\n      outline: 0,\n      zIndex: 2,\n      position: 'absolute',\n      background: '#fff'\n    },\n    small: _defineProperty({\n      fontSize: 11,\n      marginLeft: 28\n    }, theme.breakpoints.down('xs'), {\n      marginLeft: 0\n    }),\n    placeholder: {\n      color: '#b5babb',\n      height: 22,\n      overflow: 'hidden',\n      fontSize: 17,\n      marginLeft: 8,\n      textOverflow: 'ellipsis'\n    },\n    progress: {\n      marginTop: 6,\n      marginLeft: 26,\n      opacity: 0\n    }\n  };\n});\n\nvar ellipsis = function ellipsis(s) {\n  return s.length > 13 ? \"...\".concat(s.slice(-13)) : s;\n};\n\nvar getNames = function getNames(files) {\n  return files.length > 1 ? _toConsumableArray(new Array(2)).map(function (n, i) {\n    return ellipsis(files[i].name);\n  }).toString() : ellipsis(files[0].name);\n};\n\nexport default (function (_ref) {\n  var name = _ref.name,\n      files = _ref.files,\n      onChange = _ref.onChange,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"files\", \"onChange\"]);\n\n  var classes = styles();\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(File, null), __jsx(\"span\", {\n    className: classes.placeholder\n  }, files ? getNames(files) : 'Choose File(s)'), __jsx(\"input\", _extends({\n    type: \"file\",\n    name: name,\n    className: classes.input,\n    onChange: onChange\n  }, rest)), _toConsumableArray(new Array(rest.multiple ? 2 : 1)).map(function (n, i) {\n    return __jsx(\"progress\", {\n      key: i,\n      id: \"\".concat(name, \"-\").concat(i),\n      value: \"0\",\n      max: \"100\",\n      className: classes.progress\n    }, \"0%\");\n  })), __jsx(\"small\", {\n    className: classes.small\n  }, \".jpg .jpeg .png .bmp .pdf, up to 3 MB\"));\n});","map":null,"metadata":{},"sourceType":"module"}