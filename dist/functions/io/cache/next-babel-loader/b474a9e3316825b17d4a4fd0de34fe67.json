{"ast":null,"code":"import { FORM } from '../types';\nimport Router from 'next/router';\nimport { firebase, firestore, storage } from '../../firebase';\n\nconst upload = (name, file, index = 0) => dispatch => {\n  const task = storage.ref(`bursaries/${file.name}`).put(file, {\n    contentType: 'image/jpeg'\n  });\n  task.on(firebase.storage.TaskEvent.STATE_CHANGED, snapshot => {\n    const el = document.getElementById(`${name}-${index}`);\n    el.style.opacity = '1';\n    el.value = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n  }, error => error, async () => {\n    try {\n      const url = await task.snapshot.ref.getDownloadURL();\n      dispatch({\n        type: FORM.FIELD,\n        payload: {\n          name,\n          index,\n          url\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  });\n};\n\nexport const inputChange = e => dispatch => dispatch({\n  type: FORM.INPUT,\n  payload: {\n    e\n  }\n});\nexport const fileChange = ({\n  target: {\n    name,\n    files\n  }\n}) => dispatch => {\n  dispatch({\n    type: FORM.FILES,\n    payload: {\n      name,\n      files\n    }\n  });\n  files.length > 1 ? [...new Array(2)].map((n, i) => dispatch(upload(name, files[i], i))) : dispatch(upload(name, files[0]));\n};\nexport const post = data => async dispatch => {\n  dispatch({\n    type: FORM.LOADING\n  });\n\n  try {\n    await firestore.collection('bursaries').add(data);\n    await dispatch({\n      type: FORM.LOADING\n    });\n    Router.replace('/thank-you');\n  } catch (err) {\n    alert('Something went wrong, try again.');\n    console.error(err);\n  }\n};","map":{"version":3,"sources":["/Users/me/dev/bur/src/app/lib/redux/actions/form.js"],"names":["FORM","Router","firebase","firestore","storage","upload","name","file","index","dispatch","task","ref","put","contentType","on","TaskEvent","STATE_CHANGED","snapshot","el","document","getElementById","style","opacity","value","bytesTransferred","totalBytes","error","url","getDownloadURL","type","FIELD","payload","e","console","inputChange","INPUT","fileChange","target","files","FILES","length","Array","map","n","i","post","data","LOADING","collection","add","replace","err","alert"],"mappings":"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","sourcesContent":["import {FORM} from '../types'\nimport Router from 'next/router'\nimport {firebase, firestore, storage} from '../../firebase'\n\nconst upload = (name, file, index = 0) => dispatch => {\n    const task = storage.ref(`bursaries/${file.name}`).put(file, {contentType: 'image/jpeg'})\n\n    task.on(firebase.storage.TaskEvent.STATE_CHANGED,\n        snapshot => {\n            const el = document.getElementById(`${name}-${index}`)\n            el.style.opacity = '1'\n            el.value = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        }, error => error,\n        async () => {\n            try {\n                const url = await task.snapshot.ref.getDownloadURL()\n                dispatch({type: FORM.FIELD, payload: {name, index, url}})\n            } catch (e) {\n                console.error(e)\n            }\n        })\n}\n\nexport const inputChange = e => dispatch =>\n    dispatch({type: FORM.INPUT, payload: {e}})\n\nexport const fileChange = ({target: {name, files}}) => dispatch => {\n    dispatch({type: FORM.FILES, payload: {name, files}})\n    files.length > 1 ? [...new Array(2)].map((n, i) => dispatch(upload(name, files[i], i))) : dispatch(upload(name, files[0]))\n}\n\nexport const post = data => async dispatch => {\n    dispatch({type: FORM.LOADING})\n\n    try {\n        await firestore.collection('bursaries').add(data)\n        await dispatch({type: FORM.LOADING})\n        Router.replace('/thank-you')\n    } catch (err) {\n        alert('Something went wrong, try again.')\n        console.error(err)\n    }\n}"]},"metadata":{},"sourceType":"module"}