{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { FORM } from '../types';\nimport Router from 'next/router';\nimport { firebase, firestore, storage } from '../../firebase';\n\nvar upload = function upload(name, file) {\n  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return function (dispatch) {\n    var task = storage.ref(\"bursaries/\".concat(file.name)).put(file, {\n      contentType: 'image/jpeg'\n    });\n    task.on(firebase.storage.TaskEvent.STATE_CHANGED, function (snapshot) {\n      var el = document.getElementById(\"\".concat(name, \"-\").concat(index));\n      el.style.opacity = '1';\n      el.value = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n    }, function (error) {\n      return error;\n    },\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return task.snapshot.ref.getDownloadURL();\n\n            case 3:\n              url = _context.sent;\n              dispatch({\n                type: FORM.FIELD,\n                payload: {\n                  name: name,\n                  index: index,\n                  url: url\n                }\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    })));\n  };\n};\n\nexport var inputChange = function inputChange(e) {\n  return function (dispatch) {\n    return dispatch({\n      type: FORM.INPUT,\n      payload: {\n        e: e\n      }\n    });\n  };\n};\nexport var fileChange = function fileChange(_ref2) {\n  var _ref2$target = _ref2.target,\n      name = _ref2$target.name,\n      files = _ref2$target.files;\n  return function (dispatch) {\n    dispatch({\n      type: FORM.FILES,\n      payload: {\n        name: name,\n        files: files\n      }\n    });\n    files.length > 1 ? _toConsumableArray(new Array(2)).map(function (n, i) {\n      return dispatch(upload(name, files[i], i));\n    }) : dispatch(upload(name, files[0]));\n  };\n};\nexport var post = function post(data) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: FORM.LOADING\n                });\n                _context2.prev = 1;\n                _context2.next = 4;\n                return firestore.collection('bursaries').add(data);\n\n              case 4:\n                _context2.next = 6;\n                return dispatch({\n                  type: FORM.LOADING\n                });\n\n              case 6:\n                Router.replace('/thank-you');\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                alert('Something went wrong, try again.');\n                console.error(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/me/dev/bur/src/app/lib/redux/actions/form.js"],"names":["FORM","Router","firebase","firestore","storage","upload","name","file","index","dispatch","task","ref","put","contentType","on","TaskEvent","STATE_CHANGED","snapshot","el","document","getElementById","style","opacity","value","bytesTransferred","totalBytes","error","getDownloadURL","url","type","FIELD","payload","console","inputChange","e","INPUT","fileChange","target","files","FILES","length","Array","map","n","i","post","data","LOADING","collection","add","replace","alert"],"mappings":"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","sourcesContent":["import {FORM} from '../types'\nimport Router from 'next/router'\nimport {firebase, firestore, storage} from '../../firebase'\n\nconst upload = (name, file, index = 0) => dispatch => {\n    const task = storage.ref(`bursaries/${file.name}`).put(file, {contentType: 'image/jpeg'})\n\n    task.on(firebase.storage.TaskEvent.STATE_CHANGED,\n        snapshot => {\n            const el = document.getElementById(`${name}-${index}`)\n            el.style.opacity = '1'\n            el.value = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        }, error => error,\n        async () => {\n            try {\n                const url = await task.snapshot.ref.getDownloadURL()\n                dispatch({type: FORM.FIELD, payload: {name, index, url}})\n            } catch (e) {\n                console.error(e)\n            }\n        })\n}\n\nexport const inputChange = e => dispatch =>\n    dispatch({type: FORM.INPUT, payload: {e}})\n\nexport const fileChange = ({target: {name, files}}) => dispatch => {\n    dispatch({type: FORM.FILES, payload: {name, files}})\n    files.length > 1 ? [...new Array(2)].map((n, i) => dispatch(upload(name, files[i], i))) : dispatch(upload(name, files[0]))\n}\n\nexport const post = data => async dispatch => {\n    dispatch({type: FORM.LOADING})\n\n    try {\n        await firestore.collection('bursaries').add(data)\n        await dispatch({type: FORM.LOADING})\n        Router.replace('/thank-you')\n    } catch (err) {\n        alert('Something went wrong, try again.')\n        console.error(err)\n    }\n}"]},"metadata":{},"sourceType":"module"}