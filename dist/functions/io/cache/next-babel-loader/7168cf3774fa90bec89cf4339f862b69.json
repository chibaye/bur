{"ast":null,"code":"import { FORM } from '../types';\nimport Router from 'next/router';\nimport { firebase, firestore, storage } from '../../firebase';\n\nconst upload = (name, file, index = 0) => dispatch => {\n  const task = storage.ref(`bursaries/${file.name}`).put(file, {\n    contentType: 'image/jpeg'\n  });\n  task.on(firebase.storage.TaskEvent.STATE_CHANGED, snapshot => {\n    const el = document.getElementById(`${name}-${index}`);\n    el.style.opacity = '1';\n    el.value = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n  }, error => error, async () => {\n    try {\n      const url = await task.snapshot.ref.getDownloadURL();\n      dispatch({\n        type: FORM.FIELD,\n        payload: {\n          name,\n          index,\n          url\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  });\n};\n\nexport const inputChange = e => dispatch => dispatch({\n  type: FORM.INPUT,\n  payload: {\n    e\n  }\n});\nexport const fileChange = ({\n  target: {\n    name,\n    files\n  }\n}) => dispatch => {\n  dispatch({\n    type: FORM.FILES,\n    payload: {\n      name,\n      files\n    }\n  });\n  files.length > 1 ? [...new Array(2)].map((n, i) => dispatch(upload(name, files[i], i))) : dispatch(upload(name, files[0]));\n};\nexport const post = data => async dispatch => {\n  dispatch({\n    type: FORM.LOADING\n  });\n\n  try {\n    await firestore.collection('bursaries').add(data);\n    await dispatch({\n      type: FORM.LOADING\n    });\n    Router.replace('/thank-you');\n  } catch (err) {\n    alert('Something went wrong, try again.');\n    console.error(err);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}