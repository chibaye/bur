{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport flush from 'styled-jsx/server';\nimport { ServerStyleSheets } from '@material-ui/styles';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport theme from '../theme';\nexport default class _class extends Document {\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\",\n      dir: \"ltr\"\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\n_defineProperty(_class, \"getInitialProps\", async ctx => {\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(__jsx(App, props))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: __jsx(React.Fragment, null, sheets.getStyleElement(), flush() || null)\n  });\n});","map":{"version":3,"sources":["/Users/me/dev/bur/src/app/pages/_document.js"],"names":["React","flush","ServerStyleSheets","Document","Head","Main","NextScript","theme","render","palette","primary","main","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","getInitialProps","styles","getStyleElement"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,OAAOC,QAAP,IAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,UAA9B,QAA+C,eAA/C;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,eAAe,qBAAcJ,QAAd,CAAuB;AAwBlCK,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,IAAI,EAAC,IAAX;AAAgB,MAAA,GAAG,EAAC;AAApB,OACA,MAAC,IAAD,QACI;AAAM,MAAA,OAAO,EAAC;AAAd,MADJ,EAGI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,OAAO,EAAC;AAFZ,MAHJ,EAQI;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAED,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC;AAAxD,MARJ,EASI;AACI,MAAA,GAAG,EAAC,YADR;AAEI,MAAA,IAAI,EAAC;AAFT,MATJ,CADA,EAeA,oBACA,MAAC,IAAD,OADA,EAEA,MAAC,UAAD,OAFA,CAfA,CADJ;AAsBH;;AA/CiC;;2CACT,MAAMC,GAAN,IAAa;AAClC,QAAMC,MAAM,GAAG,IAAIX,iBAAJ,EAAf;AACA,QAAMY,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MACbD,kBAAkB,CAAC;AACfE,IAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,MAAM,CAACM,OAAP,CAAe,MAAC,GAAD,EAASD,KAAT,CAAf;AADb,GAAD,CADtB;;AAKA,QAAME,YAAY,GAAG,MAAMjB,QAAQ,CAACkB,eAAT,CAAyBT,GAAzB,CAA3B;AAEA,2BACOQ,YADP;AAEI;AACAE,IAAAA,MAAM,EACF,MAAC,KAAD,CAAO,QAAP,QACKT,MAAM,CAACU,eAAP,EADL,EAEKtB,KAAK,MAAM,IAFhB;AAJR;AAUH,C","sourcesContent":["import React from 'react'\nimport flush from 'styled-jsx/server'\nimport {ServerStyleSheets} from '@material-ui/styles'\nimport Document, {Head, Main, NextScript} from 'next/document'\n\nimport theme from '../theme'\n\nexport default class extends Document {\n    static getInitialProps = async ctx => {\n        const sheets = new ServerStyleSheets()\n        const originalRenderPage = ctx.renderPage\n\n        ctx.renderPage = () =>\n            originalRenderPage({\n                enhanceApp: App => props => sheets.collect(<App {...props} />)\n            })\n\n        const initialProps = await Document.getInitialProps(ctx)\n\n        return {\n            ...initialProps,\n            // Styles fragment is rendered after the app and page rendering finish.\n            styles: (\n                <React.Fragment>\n                    {sheets.getStyleElement()}\n                    {flush() || null}\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <html lang='en' dir='ltr'>\n            <Head>\n                <meta charSet='utf-8'/>\n                {/* Use minimum-scale=1 to enable GPU rasterization */}\n                <meta\n                    name='viewport'\n                    content='minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no'\n                />\n                {/* PWA primary color */}\n                <meta name='theme-color' content={theme.palette.primary.main}/>\n                <link\n                    rel='stylesheet'\n                    href='https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap'\n                />\n            </Head>\n            <body>\n            <Main/>\n            <NextScript/>\n            </body>\n            </html>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}